{"version":3,"sources":["Store/Reducer.js","components/Heading/Heading.js","components/Location/Location.js","components/ChangeLocation/ChangeLocation.js","components/DateShow/DateShow.js","components/WeatherIcon/WeatherIcon.js","components/TodaysReport/TodaysReport.js","components/NextdaysReport/NextdaysReport.js","containers/WeatherReport/WeatherReport.js","App.js","serviceWorker.js","index.js"],"names":["initialState","pincode","currentLocation","status","message","Latitude","Longitude","ip","WeatherReport","location","city","country","icon","todays_date","temperature","celsius","fahrenheit","humidity","wind","NextDayWeather","weather","next_date","reducer","state","action","type","newPinCode","replace","newLocation","latitude","longitude","newIP","area","cuntry","date_time","temp_c","temp_f","weather_repot","WeatherData","reports","length","shift","data","Array","map","report_data","push","date","day","avgtemp_c","today","Date","setDate","getDate","month","getUTCMonth","getUTCDate","year","getUTCFullYear","Header","Location","props","ChangeLocation","keycode","ChangePincode","event","target","value","setState","slice","GetKeyCode","keyCode","ChangeGlobalPinCode","onChangeGlobalPincode","GetLocation","navigator","geolocation","getCurrentPosition","position","onClickGetLocation","coords","e","Fragment","this","GeoLocationMessage","className","onClick","size","color","placeholder","readOnly","onKeyDown","onChange","onKeyUp","Component","connect","globalPincode","dispatch","DateShow","today_date","mydate","weekname","toLocaleString","weekday","find_l_date","l_date","month_number","Month_name","getMonth","WeatherIcon","Icon","TodaysReport","NextdaysReport","temparature","weather_data","ShowLoader","ChangeGlobalIP","onChangeGlobalIp","fetch","then","res","json","IPv4","IPSetup","onChangeGlobalWeatherReport","axios","get","headers","resp","current","feelslike_c","feelslike_f","localtime","name","wind_kph","catch","console","log","onChangeGlobalNextDayWeatherReport","forecast","forecastday","PincodeSetup","GeoLocationSetup","Status","GetLatitute","GetLongitute","NextDayWeatherReport","href","Message","IP","App","Boolean","window","hostname","match","store","createStore","Reducer","subscribe","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.0e96ed87.chunk.js","sourcesContent":["const initialState = {\n    pincode: null,\n    currentLocation: {\n        status: null,\n        message: '',\n        Latitude: null,\n        Longitude: null,\n    },\n    ip: null,\n    WeatherReport: {\n        status: 0,\n        location: {\n            city: '',\n            country: '',\n        },\n        icon: null,\n        todays_date: '',\n        temperature: {\n            celsius: null,\n            fahrenheit: null\n        },\n        humidity: '',\n        wind: '',\n    },\n    NextDayWeather: {\n        status: 0,\n        weather: [{\n            next_date: null,\n            temperature: {\n                celsius: null,\n            },\n            icon: null\n        }],\n    }\n};\n\nconst reducer = (state = initialState, action) => {\n    if(action.type === 'ChangePinCode'){\n        return{\n            ...state,\n            pincode: action.newPinCode.replace('-', ''),\n            ip: null,\n            currentLocation: {\n                status: null,\n                message: '',\n                Latitude: null,\n                Longitude: null,\n            },\n        }\n    }\n    if(action.type === 'ChangeCurrentLocation'){\n        return{\n            ...state,\n            pincode: null,\n            ip: null,\n            currentLocation: {\n                status: action.newLocation.status,\n                message: action.newLocation.message,\n                Latitude: action.newLocation.latitude,\n                Longitude: action.newLocation.longitude,\n            },\n        }\n    }\n    if(action.type === 'ChangeIp'){\n        return{\n            ...state,\n            ip: action.newIP,\n            pincode: null,\n            currentLocation: {\n                status: null,\n                message: '',\n                Latitude: null,\n                Longitude: null,\n            },\n        }\n    }\n\n    // ------------------------------------------------------------------------------------------------\n    //      Weather Report update start\n    // ------------------------------------------------------------------------------------------------\n    if(action.type === 'ChangeWeatherReport'){\n        return {\n            ...state,\n            pincode: null,\n            currentLocation: {\n                status: null,\n            },\n            ip: null,\n            WeatherReport: {\n                status: 1,\n                location: {\n                    city: action.WeatherReport.area,\n                    country: action.WeatherReport.cuntry,\n                },\n                todays_date: action.WeatherReport.date_time,\n                temperature: {\n                    celsius: action.WeatherReport.temp_c,\n                    fahrenheit: action.WeatherReport.temp_f,\n                },\n                humidity: action.WeatherReport.humidity,\n                wind: action.WeatherReport.wind,\n            }\n        }\n    }\n\n    // ---------------------------------------------------------------------------------------------------\n    // Next day report\n    // ---------------------------------------------------------------------------------------------------\n    if(action.type === 'NextDayReport'){\n        let weather_repot = action.WeatherData.reports;\n        if(weather_repot.length > 2){\n            weather_repot.shift();\n        }\n        let data = new Array();\n        weather_repot.map((report_data) => {\n            data.push({\n                next_date: report_data.date,\n                temperature: {\n                    celsius: report_data.day.avgtemp_c\n                }\n            })\n        })\n        if(weather_repot[1]) {\n            let today = new Date();\n            today.setDate(new Date(weather_repot[1].date).getDate()+1);\n            \n            var month = today.getUTCMonth() + 1;\n            var day = today.getUTCDate();\n            var year = today.getUTCFullYear();\n            data.push({\n                next_date: year+'-'+month+'-'+day,\n                temperature: {\n                    celsius: weather_repot[1].day.avgtemp_c\n                }\n            })\n\n            today = new Date();\n            today.setDate(new Date(weather_repot[1].date).getDate()+2);\n            \n            month = today.getUTCMonth() + 1;\n            day = today.getUTCDate();\n            year = today.getUTCFullYear();\n            data.push({\n                next_date: year+'-'+month+'-'+day,\n                temperature: {\n                    celsius: weather_repot[1].day.avgtemp_c\n                }\n            })\n        }\n        \n        return {\n            ...state,\n            NextDayWeather: {\n                status: 1,\n                weather: data,\n            }\n\n        }\n    }\n\n    return state;\n}\n\nexport default reducer;","import React from 'react';\n\nconst Header = () => (\n    <h1>Weather Report</h1>\n);\n\nexport default Header;","import React from 'react';\n\nconst Location = (props) => (\n    <h4>{props.area} {props.country}</h4>\n);\n\nexport default Location;","import React, { Component } from 'react';\nimport './ChangeLocation.css';\nimport { WiCloudRefresh } from \"weather-icons-react\";\n\nimport { connect } from 'react-redux';\n\nclass ChangeLocation extends Component{\n    state = {\n        pincode: '',\n        keycode: '',\n    }\n\n    ChangePincode = (event) => {\n        // console.log(event.target.value, this.state.keycode);\n        if(this.state.keycode !== 8){\n            if(event.target.value.length < 4){\n                this.setState({pincode: event.target.value});\n            }\n            if(event.target.value.length === 3){\n                this.setState({pincode: event.target.value+'-'});\n            }\n            if(event.target.value.length < 8 && event.target.value.length > 3){\n                this.setState({pincode: event.target.value});\n            }\n        }\n        else{\n            this.setState({pincode: this.state.pincode.slice(0, -1)});\n        }\n    }\n\n    GetKeyCode = (event) => {\n        this.setState({keycode: event.keyCode});\n    }\n\n    ChangeGlobalPinCode = () => {\n        if(this.state.pincode.length === 7)\n            this.props.onChangeGlobalPincode(this.state.pincode);\n    }\n\n    GetLocation = (props) => {\n        /*navigator.geolocation.getCurrentPosition(function(position) {\n            console.log(position);\n            console.log(\"Latitude is :\", position.coords.latitude);\n            console.log(\"Longitude is :\", position.coords.longitude);\n        },\n        function(error) {\n            console.log(error);\n            this.setState({\n                currentLocation: 0,\n                message: 'Browser Deny To Pick Your Location',\n            });\n        });*/\n        \n        const success = (position ) => {\n            // console.log(position);\n            // console.log(position.coords.latitude, position.coords.longitude);\n            this.props.onClickGetLocation({\n                status: 1,\n                message: '',\n                latitude: position.coords.latitude,\n                longitude: position.coords.longitude,\n            });\n        }\n\n        const error = ( e ) => {\n            this.props.onClickGetLocation({\n                status: 0,\n                message: 'Your Browser Location Not Allow',\n                latitude: null,\n                longitude: null,});\n        }\n\n        navigator.geolocation.getCurrentPosition(success, error);\n        // this.props.onChangeGlobalPincode(this.state.pincode);\n    }\n\n    render(){\n        return (\n            <React.Fragment>\n                {(this.props.GeoLocationMessage !== \"\")? \n                    <div>\n                        <small>{ this.props.GeoLocationMessage }</small>\n                    </div>\n                : null\n                }\n                <div className=\"change_location\">                    \n                    <button onClick={this.GetLocation}><WiCloudRefresh size={35} color='#000' /> Get Current Location</button>\n                </div>\n                <div className=\"change_pincode\">\n                    <span className=\"pincode_textbox\">\n                        <input type=\"text\" placeholder=\"Enter your 6 digit pincode\" readOnly value={this.state.pincode} onKeyDown={this.GetKeyCode} onChange={this.ChangePincode} onKeyUp={this.ChangeGlobalPinCode} />\n                        <span>Coming Soon</span>\n                    </span>\n                </div>\n                {/* {console.log('asdasd', this.props.globalPincode, this.props.ip)} */}\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        globalPincode: state.pincode,\n        ip: state.ip,\n        GeoLocationMessage: state.currentLocation.message\n    };\n};\n\nconst mapDespatchToProps = dispatch => {\n    return {\n        onChangeGlobalPincode: (newPinCode) => dispatch({type: 'ChangePinCode', newPinCode: newPinCode}),\n        onClickGetLocation: (newLocation) => dispatch({type: 'ChangeCurrentLocation', newLocation: newLocation}),\n    }\n}\n\nexport default connect(mapStateToProps, mapDespatchToProps) (ChangeLocation);","import React, { Component } from 'react';\n\nclass DateShow extends Component{\n    render(){\n        let today_date = this.props.today_date;\n        var mydate = new Date(today_date);\n        var weekname = mydate.toLocaleString('en-us', {  weekday: 'long' });\n        var date = mydate.getDate();\n        let l_date = (find_l_date) => {\n            switch(find_l_date) {\n                case 1: return 'st';\n                case 2: return 'nd';\n                case 3: return 'rd';\n                case 31: return 'st';\n                default: return 'th';\n            }\n        }\n        let Month_name = (month_number) => {\n            switch(month_number) {\n                case 1: return 'January';\n                case 2: return 'Febrary';\n                case 3: return 'March';\n                case 4: return 'April';\n                case 5: return 'May';\n                case 6: return 'June';\n                case 7: return 'July';\n                case 8: return 'August';\n                case 9: return 'September';\n                case 10: return 'October';\n                case 11: return 'November';\n                case 12: return 'December';\n                default: return 'Error';\n            }\n        }\n\n        // console.log(today_date, mydate, date);\n        return (\n        <h6>{ weekname }, {date}{ l_date(date) } { Month_name(mydate.getMonth()+1) }</h6>\n        );\n    };\n}\n\nexport default DateShow;","import React from 'react';\nimport { WiDaySunny, WiThermometer, WiStrongWind } from \"weather-icons-react\";\n\nconst WeatherIcon = (props) => {\n    let Icon = \"\";\n    if(props.data === \"WiDaySunny\")\n        Icon = <WiDaySunny size={35} color='#fff' />;\n    if(props.data === \"WiThermometer\")\n        Icon = <WiThermometer size={35} color='#fff' />;\n    if(props.data === \"WiStrongWind\")\n        Icon = <WiStrongWind size={35} color='#fff' />;\n    return (\n        Icon\n    );\n};\n\nexport default WeatherIcon;","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport Location from '../Location/Location';\nimport ChangeLocation from '../ChangeLocation/ChangeLocation';\nimport DateShow from '../DateShow/DateShow';\nimport WeatherIcon from '../WeatherIcon/WeatherIcon';\n\nclass TodaysReport extends Component{\n    render(){\n        return (\n            <div className=\"current_day_report\">\n                <Location area={this.props.area} country={this.props.country} />\n                <DateShow today_date={this.props.date_time} />\n                <div className=\"temparature\">\n                    <WeatherIcon data=\"WiDaySunny\" />\n                    <span>{ this.props.celsius } <sup>o</sup>C | </span>\n                    <span>{ this.props.fahrenheit } <sup>o</sup>F </span>\n                </div>\n                <div className=\"humidity\">\n                    <WeatherIcon data=\"WiThermometer\" />\n                    <span>{ this.props.humidity }%</span>\n                </div>\n                <div className=\"wind\">\n                    <WeatherIcon data=\"WiStrongWind\" />\n                    <span>{ this.props.wind } km/h</span>\n                </div>\n                <ChangeLocation />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        celsius: state.WeatherReport.temperature.celsius,\n        fahrenheit: state.WeatherReport.temperature.fahrenheit,\n        area: state.WeatherReport.location.city,\n        country: state.WeatherReport.location.country,\n        date_time: state.WeatherReport.todays_date,\n        humidity: state.WeatherReport.humidity,\n        wind: state.WeatherReport.wind,\n    };\n};\n\nexport default connect(mapStateToProps, null) (TodaysReport);","import React from 'react';\n// import { Next } from 'react-bootstrap/esm/PageItem';\nimport { WiDayCloudyHigh } from \"weather-icons-react\";\n\nconst NextdaysReport = (props) => {\n    let temparature = null;\n    if(props.weather_data !== null && props.day === '3') {\n        temparature = props.weather_data.temperature.celsius+3;\n    }\n    else if(props.weather_data !== null && props.day === '4') {\n        temparature = props.weather_data.temperature.celsius+2;\n    }\n    else if(props.weather_data !== null) {\n        temparature = props.weather_data.temperature.celsius;\n    }\n\n    if(props.weather_data !== null){\n        // console.log(props.weather_data.next_date);\n        var mydate = new Date(props.weather_data.next_date);\n        var weekname = mydate.toLocaleString('en-us', {  weekday: 'short' });\n    }\n    \n    return (\n        <div className=\"col-md-3 col-6 next_day_reports_color\">\n            <div className=\"next_day\">\n                <div className=\"icon\">\n                    <WiDayCloudyHigh size={45} color='#fff' />\n                </div>\n                <div className=\"data\">\n                    <p>\n                    <span>{ weekname }</span>\n                    </p>\n                    <p>\n                    <span>{ temparature } <sup>o</sup>C</span>\n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default NextdaysReport;","import React, { Component } from 'react';\nimport '../../Assets/css/WeatherReport.css';\n\nimport axios from 'axios';\n\nimport { connect } from 'react-redux';\n\nimport Header from '../../components/Heading/Heading';\nimport TodaysReport from '../../components/TodaysReport/TodaysReport';\nimport NextdaysReport from '../../components/NextdaysReport/NextdaysReport';\n\nclass WeatherReport extends Component{\n\n    state = {\n        ip: null,\n        ShowLoader: true,\n    }\n\n    async componentDidMount() {\n        await fetch(`https://geolocation-db.com/json/`)\n        .then(res => res.json())\n        .then(json => {this.setState({ip: json.IPv4})});\n\n        this.ChangeGlobalIP();\n    }\n\n    async componentDidUpdate() {\n        /* Get weather from Ip Address */\n        if(this.props.IPSetup !== null) {\n            this.setState({ShowLoader: true});\n            this.props.onChangeGlobalWeatherReport({'temp_c': null});\n            await axios.get('https://api.weatherapi.com/v1/current.json?key=0062baeabb03462694563754221103&q='+this.props.IPSetup,{\n                headers: {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                }\n            })\n            .then(resp => {\n                this.setState({ShowLoader: false});\n                this.props.onChangeGlobalWeatherReport({\n                    'temp_c': resp.data.current.feelslike_c,\n                    'temp_f': resp.data.current.feelslike_f,\n                    'date_time': resp.data.location.localtime,\n                    'cuntry': resp.data.location.country,\n                    'area': resp.data.location.name,\n                    'humidity': resp.data.current.humidity,\n                    'wind': resp.data.current.wind_kph,\n                });\n            })\n            .catch(resp => {\n                this.setState({ShowLoader: false});\n                console.log(resp);\n            })\n\n            // axios.get('https://api.weatherapi.com/v1/forecast.json?key=06830f34f6714e62a6191013202510&q='+state.ip+'&dt=2020-11-1')\n            await axios.get('https://api.weatherapi.com/v1/forecast.json?key=0062baeabb03462694563754221103&q='+this.props.IPSetup+'&days=5')\n            .then(resp => {\n                // console.log('4 days api', resp);\n                this.props.onChangeGlobalNextDayWeatherReport({\n                    'reports': resp.data.forecast.forecastday\n                })\n            })\n            .catch(resp => {\n                console.log(resp);\n            })\n        }\n        /* Get weather from Ip Address end */\n        if(this.props.PincodeSetup !== null) {\n            this.setState({ShowLoader: true});\n            this.props.onChangeGlobalWeatherReport({'temp_c': null});\n            console.log(this.props.PincodeSetup);\n            this.setState({ShowLoader: false});\n        }\n        if(this.props.GeoLocationSetup.Status !== null && this.props.GeoLocationSetup.Latitude !== null) {\n            this.setState({ShowLoader: true});\n            this.props.onChangeGlobalWeatherReport({'temp_c': null});\n            const GetLatitute = this.props.GeoLocationSetup.Latitude;\n            const GetLongitute = this.props.GeoLocationSetup.Longitude;\n            await axios.get('https://api.weatherapi.com/v1/current.json?key=0062baeabb03462694563754221103&q='+this.props.GeoLocationSetup.Latitude+','+this.props.GeoLocationSetup.Longitude)\n            .then(resp => {\n                this.setState({ShowLoader: false});\n                this.props.onChangeGlobalWeatherReport({\n                    'temp_c': resp.data.current.feelslike_c,\n                    'temp_f': resp.data.current.feelslike_f,\n                    'date_time': resp.data.location.localtime,\n                    'cuntry': resp.data.location.country,\n                    'area': resp.data.location.name,\n                    'humidity': resp.data.current.humidity,\n                    'wind': resp.data.current.wind_kph,\n                });\n            })\n            .catch(resp => {\n                this.setState({ShowLoader: false});\n                console.log(resp);\n            })\n            \n            // axios.get('https://api.weatherapi.com/v1/forecast.json?key=06830f34f6714e62a6191013202510&q='+state.ip+'&dt=2020-11-1')\n            await axios.get('https://api.weatherapi.com/v1/forecast.json?key=0062baeabb03462694563754221103&q='+GetLatitute+','+GetLongitute+'&days=4')\n            .then(resp => {\n                // console.log(resp);\n                this.props.onChangeGlobalNextDayWeatherReport({\n                    'reports': resp.data.forecast.forecastday\n                })\n            })\n            .catch(resp => {\n                console.log(resp);\n            })\n        }\n    }\n\n    ChangeGlobalIP = () => {\n        this.props.onChangeGlobalIp(this.state.ip);\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"container\">\n                    <header>\n                        <Header></Header>\n                    </header>\n\n                    {\n                        (this.state.ShowLoader) ? \n                        <div className=\"show_reports\">\n                            <div className=\"loading_loader\">Loading...</div>\n                        </div>\n                        :\n                        <div className=\"show_reports\">\n                            <TodaysReport></TodaysReport>\n                            <div className=\"next_day_reports\">\n                                <div className=\"row\">\n                                    <NextdaysReport day='1' weather_data={(this.props.NextDayWeatherReport.weather.length >= 2) ? this.props.NextDayWeatherReport.weather[0] : null} />\n                                    <NextdaysReport day='2' weather_data={(this.props.NextDayWeatherReport.weather.length >= 2) ? this.props.NextDayWeatherReport.weather[1] : null} />\n                                    <NextdaysReport day='3' weather_data={(this.props.NextDayWeatherReport.weather.length >= 2) ? this.props.NextDayWeatherReport.weather[2] : null} />\n                                    <NextdaysReport day='4' weather_data={(this.props.NextDayWeatherReport.weather.length >= 2) ? this.props.NextDayWeatherReport.weather[3] : null} />\n                                </div>\n                            </div>\n                        </div>\n                    }\n\n                    <footer>\n                    <div className=\"footer\">\n                        <span>&copy; 2020 Weather Report . All rights reserved | Design & Developed by <a href=\"https://dey-subhajit.github.io/portfolio\">{/* Dark screen developer */} Subhajit Dey</a></span>\n                    </div>\n                    </footer>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        IPSetup: state.ip,\n        PincodeSetup: state.pincode,\n        GeoLocationSetup: {\n            Status: state.currentLocation.status,\n            Message: state.currentLocation.status,\n            Latitude: state.currentLocation.Latitude,\n            Longitude: state.currentLocation.Longitude,\n        },\n        NextDayWeatherReport: state.NextDayWeather,\n    };\n};\n\nconst mapDespatchToProps = dispatch => {\n    return {\n        onChangeGlobalIp: (IP) => dispatch({type: 'ChangeIp', newIP: IP}),\n        onChangeGlobalWeatherReport: (WeatherReport) => dispatch({type: 'ChangeWeatherReport', 'WeatherReport': WeatherReport}),\n        onChangeGlobalNextDayWeatherReport: (NextDayWeatherReport) => dispatch({type: 'NextDayReport', WeatherData: NextDayWeatherReport}),\n    };\n};\n\nexport default connect(mapStateToProps, mapDespatchToProps) (WeatherReport);\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport WeatherReport from './containers/WeatherReport/WeatherReport';\n\nfunction App() {\n  return (\n    <WeatherReport></WeatherReport>    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport Reducer from './Store/Reducer';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(Reducer);\n\nstore.subscribe(() => {\n  // console.log(\"subscribe\", store.getState());\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n/*ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);*/\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}